#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){
    vector<int>ans;
    if(root==NULL) return ans;
    map<int,int>mp;
    //map<vertical,node>mp;
    queue<pair<BinaryTreeNode<int> *,int>>q;
    q.push({root,0});

    while(!q.empty()){
        auto p=q.front();
        q.pop();
        mp[p.second]=p.first->data;
        if(p.first->left) q.push({p.first->left,p.second-1});
        if(p.first->right) q.push({p.first->right,p.second+1});

    }
    for(auto it:mp){
        ans.push_back(it.second);
    }
    return ans;
    
    
}
