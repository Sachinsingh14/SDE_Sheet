#include <bits/stdc++.h> 
 int func(int i,int j,vector<vector<int>>grid,vector<vector<int>>&dp){
    if(i==0 and j==0){
        return grid[0][0];
    }
    if(i<0 or j<0){
        //INT_MAX so that it is never considered a path --->>

        return 1e9;
    }
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    int up=grid[i][j]+func(i-1,j,grid,dp);
    int left=grid[i][j]+func(i,j-1,grid,dp);

    return dp[i][j]=min(up,left);

    }
int minSumPath(vector<vector<int>> &grid) {
    int n=grid.size();
    int m=grid[0].size();
    vector<vector<int>>dp(n,vector<int>(m,0));
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(i==0 and j==0){
                dp[i][j]=grid[i][j];
            }
            else{
                int up=1e9,left=1e9;
            if(i-1>=0) up=grid[i][j]+dp[i-1][j];
            if(j-1>=0) left=grid[i][j]+dp[i][j-1];
            dp[i][j]=min(up,left);

            }
            
        }
    }
    return dp[n-1][m-1];

}
