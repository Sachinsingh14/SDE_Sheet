#include <vector>
long func(int ind,int value,int *arr,vector<vector<long>>&dp){
    if(ind==0){
        return (value%arr[0]==0);
    }
    if(dp[ind][value]!=-1) return dp[ind][value];
    long notpick=func(ind-1,value,arr,dp);
    long pick=0;
    if(arr[ind]<=value){
        pick=func(ind,value-arr[ind],arr,dp);
    }
    return dp[ind][value]=notpick+pick;
}
long countWaysToMakeChange(int *denominations, int n, int value)
{
    vector<vector<long>>dp(n,vector<long>(value+1,-1));
    return func(n-1,value,denominations,dp);
}
