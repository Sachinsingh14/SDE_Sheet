#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    // Write your code here.
    stack<pair<BinaryTreeNode<int>*,int>>st;
    st.push({root,1});
    vector<vector<int>>ans;
    if(root==NULL) return ans;
    vector<int>pre,ino,post;

    
    while(!st.empty()){
        auto p=st.top();
        st.pop();
        int val=p.first->data;
        
        if(p.second==1){
            pre.push_back(val);
            p.second++;
            st.push(p);
            if(p.first->left) st.push({p.first->left,1});
        }
        else if(p.second==2){
            ino.push_back(val);
            p.second++;
            st.push(p);
            if(p.first->right) st.push({p.first->right,1});
        }
        else if(p.second==3){
            post.push_back(val);
        }

    }
    ans.push_back(ino);
    ans.push_back(pre);
    ans.push_back(post);
    return ans;


}
