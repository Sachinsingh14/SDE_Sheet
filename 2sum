class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        // vector<int>ans;
        // for(int i=0;i<nums.size();i++){
        //     for(int j=i+1;j<nums.size();j++){
        //         if(nums[i]+nums[j]==target){
        //             ans.push_back(i);
        //             ans.push_back(j);
        //             break;
        //         }
        //     }
        // }
        // return ans;

        // map<int,int>m;
        // vector<int>ans;
        // for(int i=0;i<nums.size();i++){
        //     int temp=target-nums[i];
        //     if(m.find(temp)!=m.end()){
        //         ans.push_back(m[temp]);
        //         ans.push_back(i);
        //         break;
        //     }
        //     else{
        //         m[nums[i]]=i;
        //     }
        // }
        // return ans;

        //two pointer approach 
        int n=nums.size();
        int i=0;
        int j=n-1;
        sort(nums.begin(),nums.end());
        vector<int>ans;
        while(i<j){
            int temp=nums[i]+nums[j];
            if(temp==target){
                ans.push_back(i);
                ans.push_back(j);
                break;
            }
            else if(temp>target){
                j--;
            }
            else if(temp<target){
                i++;
            }
        }
        return ans;
    }
};
